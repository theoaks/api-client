/*! theoaksoft-api-client 2019-12-29 */

!function(e,t){"use strict";if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t(e,require("lodash"));else if("function"==typeof define&&define.amd)define([e,"lodash"],t);else{if(void 0===e._)throw Error("ApiClient requires lodash");e.ApiClient=t(e,e._),e.OaksEncryptor=e.ApiClient}}("undefined"!=typeof window?window:this,function(e,t){"use strict";const o={get:"GET",post:"POST",put:"PUT",delete:"DELETE"};function s(e){var t="There's a server connection currently active. If you close this window, you will lose the progress made";return e.returnValue=t,t}function r(e,t,o){this.apiUrlBase=e,this.authToken=t}return r.prototype={appId:null,deviceId:null,setServerTimeout(e){this.serverTimeout=NaN!==Number(e)?Number(e):null},sendForm:function(t,r,n,a){var u=this;return new Promise(function(a,i){var d=n.method||o.post,l=n;e.onbeforeunload=s,l instanceof FormData||(l=new FormData(n));n.enctype;"multipart/form-data"===n.enctype&&("multipart/form-data; charset=utf-8; boundary="+Math.random().toString().substr(2),d=o.post);var c=u.buildUrl(t,r);if(d.toUpperCase()===o.get){var p=[];for(var h in l.entries())p.push(encodeURIComponent(h[0])+"="+encodeURIComponent(h[1]));c=c+"?"+p.join("&")}var f=new XMLHttpRequest;f.onload=function(){var t=f.responseText;e.onbeforeunload=null;var o=JSON.parse(t);this.status>=200&&this.status<300?a(o):i(o)},f.onerror=function(){try{var e=JSON.parse(f.statusText)}catch(t){e={success:!1,message:f.statusText,data:null}}i(e)},f.open(d.toUpperCase(),c),null!=u.authToken&&f.setRequestHeader("Authorization",`Bearer ${u.authToken}`),f.setRequestHeader("Accept","application/json"),f.setRequestHeader("Oaks-Request-Source","xmlhttprequest"),f.setRequestHeader("Oaks-Origin-Host",location.protocol+"//"+location.host),f.setRequestHeader("Oaks-Origin-Url",location.href),f.withCredentials=!0,d.toLowerCase()===o.get.toLowerCase()?f.send():f.send(l)})},send(r,n,a){var u=this,i=this.buildUrl(r,n);e.onbeforeunload=s;var d=t.defaultsDeep(a,{method:"post",data:null});return new Promise((t,s)=>{var r=new XMLHttpRequest,n=d.data;if(r.onload=(()=>{var o=r.responseText;e.onbeforeunload=null;try{var n=JSON.parse(o);r.status>=200&&r.status<300?t(n,r):(n.statusCode=r.statusCode,s(n,r))}catch(e){s({success:!1,message:e,statusCode:r.statusCode},r)}}),r.onerror=(()=>{try{var e=JSON.parse(r.statusText)}catch(t){console.error(t),e={success:!1,message:r.statusText,data:null}}e.statusCode=r.statusCode,s(e,r)}),this.serverTimeout>0&&(r.ontimeout=(()=>{s({success:!1,message:"The server did not respond on time. You might need to try again later."},r)})),d.method.toLowerCase()===o.get.toLowerCase()){var a=[];for(var l in n)null!==n[l]&&n.hasOwnProperty(l)&&a.push(encodeURIComponent(l)+"="+encodeURIComponent(n[l]));a.length>0&&(i=i+"?"+a.join("&"))}r.open(d.method.toUpperCase(),i),null!=this.authToken&&r.setRequestHeader("Authorization",`Bearer ${u.authToken}`),r.setRequestHeader("Accept","application/json"),r.setRequestHeader("Oaks-Request-Source","xmlhttprequest"),r.setRequestHeader("Oaks-Origin-Host",location.protocol+"//"+location.host),r.setRequestHeader("Oaks-Origin-Url",location.href),r.withCredentials=!0;try{"get"===d.method.toLowerCase()?r.send():(r.setRequestHeader("Content-Type","application/json"),r.send(JSON.stringify(n)))}catch(e){s({success:!1,message:"Unable to connect to the server.",statusCode:r.statusCode})}})},buildUrl(e,t){return this.apiUrlBase+"/"+e+"/"+t},isFunction:e=>"function"==typeof e,isObject:e=>"object"==typeof e},console.log(r),r});